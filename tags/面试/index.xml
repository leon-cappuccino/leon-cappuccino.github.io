<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on Leon Blog</title>
    <link>https://leon-cappuccino.github.io/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on Leon Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://leon-cappuccino.github.io/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android面试题之四大组件</title>
      <link>https://leon-cappuccino.github.io/posts/android%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://leon-cappuccino.github.io/posts/android%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B9%8B%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6/</guid>
      <description>Android四大组件相关 一、Activity相关 1.介绍不同场景下的Activity生命周期变化过程？ (1)Activity正常启动 onCreate-&amp;gt;onStart-&amp;gt;onResume
(2)Activity启动另一个Activity 1)B完全挡住A A:onPause -&amp;gt; B:onCreate -&amp;gt; B:onStart -&amp;gt; B:onResume -&amp;gt; A:onSaveInstanceState-&amp;gt; A:onStop
如果我们在此时点击Back键，将依次执行B:onPause -&amp;gt; A:onRestart -&amp;gt; A:onStart -&amp;gt; A:onResume -&amp;gt; B:onStop -&amp;gt; B:onDestroy
2）B没有完全挡住A，如dialog A:onPause -&amp;gt; B:onCreate -&amp;gt; B:onStart -&amp;gt; B:onResume -&amp;gt; A:onSaveInstanceState
可以看到，相比完全挡住的情况，由于A可见，因此不会到onStop
如果我们此时点击Back键，将依次执行B:onPause -&amp;gt; A:``onResume -&amp;gt; B:onStop -&amp;gt; B:onDestroy`
如果我们此时点击home键，将依次执行B:onPause -&amp;gt; A:onStop-&amp;gt; B:onSaveInstanceState -&amp;gt; B:onStop，再将应用切到前台 A:onRestart -&amp;gt; A:onStart -&amp;gt; B:onRestart -&amp;gt; B:onStart -&amp;gt; B:onResume
注意以上的讨论前提是启动模式为standard。
(3)Activity按back键返回 onPause -&amp;gt; onStop -&amp;gt; onDestroy
(4)按home键返回到桌面 onPause -&amp;gt; onSaveInstanceState -&amp;gt; onStop</description>
    </item>
    
  </channel>
</rss>
